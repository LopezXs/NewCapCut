
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==6) then v28=nil;function v28()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if (v38==(1550 -(897 + 653))) then local v76=0;while true do if (v76==1) then v38=1 + 0;break;end if (v76==(0 -0)) then v39=0 + 0;v40=nil;v76=1;end end end if (v38==3) then v45=nil;while true do local v79=0;while true do if (v79==(0 -0)) then local v97=0;while true do if (v97==1) then v79=1 + 0;break;end if (v97==(0 + 0)) then if (v39==(6 -4)) then local v106=0 + 0;local v107;while true do if (v106~=0) then else v107=0;while true do if (v107==(906 -(722 + 184))) then local v114=154 -(148 + 6);while true do if (v114==0) then for v122=1,v44 do local v123=0;local v124;local v125;local v126;while true do if (v123~=(1 + 0)) then else v126=nil;while true do if (1==v124) then if (v125==(1 -0)) then v126=v21()~=(0 + 0);elseif (v125==(2 + 0)) then v126=v24();elseif (v125~=3) then else v126=v25();end v45[v122]=v126;break;end if (v124~=(0 + 0)) then else local v223=630 -(182 + 448);while true do if (v223~=(0 + 0)) then else v125=v21();v126=nil;v223=1 + 0;end if (v223~=(1 + 0)) then else v124=1;break;end end end end break;end if ((1830 -(826 + 1004))~=v123) then else v124=0;v125=nil;v123=1 + 0;end end end v43[3 + 0]=v21();v114=1;end if (v114~=1) then else v107=1;break;end end end if (1==v107) then for v115=1,v23() do local v116=870 -(415 + 455);local v117;local v118;local v119;while true do if (v116==0) then v117=0 + 0;v118=nil;v116=1 + 0;end if (v116==(1 + 0)) then v119=nil;while true do if (v117~=(1641 -(740 + 901))) then else local v149=1352 -(898 + 454);local v150;while true do if (v149==(1278 -(1124 + 154))) then v150=1022 -(333 + 689);while true do if ((1302 -(288 + 1014))~=v150) then else local v257=1167 -(1158 + 9);while true do if (v257==1) then v150=1 -0;break;end if (v257==(0 -0)) then v118=715 -(65 + 650);v119=nil;v257=1;end end end if (v150==1) then v117=56 -(18 + 37);break;end end break;end end end if (v117==(1 -0)) then while true do if (v118~=0) then else v119=v21();if (v20(v119,1 -0,1)==(971 -(503 + 468))) then local v232=0 -0;local v233;local v234;local v235;local v236;while true do if (1~=v232) then else local v274=0;while true do if (v274==0) then v235=nil;v236=nil;v274=1;end if (v274==1) then v232=840 -(800 + 38);break;end end end if (v232==(0 -0)) then local v275=0;while true do if (v275==(1794 -(1643 + 151))) then v233=723 -(435 + 288);v234=nil;v275=1;end if (v275==(3 -2)) then v232=1 + 0;break;end end end if (v232==2) then while true do if (0==v233) then local v300=0 -0;local v301;while true do if (v300~=0) then else v301=1400 -(13 + 1387);while true do if (v301~=(1 + 0)) then else v233=1 + 0;break;end if (v301~=(514 -(34 + 480))) then else local v328=0 + 0;local v329;while true do if (0==v328) then v329=0;while true do if (v329==0) then v234=v20(v119,1 + 1,3);v235=v20(v119,4,2 + 4);v329=1 + 0;end if (1~=v329) then else v301=28 -(23 + 4);break;end end break;end end end end break;end end end if (v233~=1) then else local v302=0 -0;local v303;local v304;while true do if (v302~=0) then else v303=1743 -(253 + 1490);v304=nil;v302=642 -(392 + 249);end if (v302==(1834 -(1745 + 88))) then while true do if (v303==0) then v304=0;while true do if (v304==1) then v233=2;break;end if ((286 -(18 + 268))~=v304) then else v236={v22(),v22(),nil,nil};if (v234==0) then local v338=0 -0;local v339;while true do if (v338~=(1246 -(759 + 487))) then else v339=1529 -(7 + 1522);while true do if (v339~=(0 + 0)) then else v236[3]=v22();v236[4]=v22();break;end end break;end end elseif (v234==(2 -1)) then v236[8 -5]=v23();elseif (v234==(3 -1)) then v236[3 + 0]=v23() -((7 -5)^16);elseif (v234==3) then local v346=0;local v347;local v348;while true do if (v346==(704 -(588 + 116))) then v347=1488 -(750 + 738);v348=nil;v346=1;end if (v346~=(1 + 0)) then else while true do if (v347==0) then v348=0;while true do if (v348==0) then v236[5 -2]=v23() -((2 + 0)^16);v236[480 -(17 + 459)]=v22();break;end end break;end end break;end end end v304=1;end end break;end end break;end end end if (v233==(1092 -(820 + 270))) then local v305=0 + 0;local v306;while true do if ((0 -0)==v305) then v306=0 + 0;while true do if (v306~=(0 -0)) then else local v330=0;local v331;while true do if ((244 -(99 + 145))~=v330) then else v331=150 -(55 + 95);while true do if (v331~=0) then else local v340=0;while true do if ((3 -2)==v340) then v331=2 -1;break;end if (v340~=(0 -0)) then else if (v20(v235,1,1 + 0)==(926 -(375 + 550))) then v236[2]=v45[v236[2]];end if (v20(v235,225 -(185 + 38),2)~=(1 + 0)) then else v236[501 -(120 + 378)]=v45[v236[3 + 0]];end v340=1097 -(163 + 933);end end end if (v331==(1 + 0)) then v306=1;break;end end break;end end end if (1~=v306) then else v233=3;break;end end break;end end end if (v233==3) then if (v20(v235,5 -2,107 -(75 + 29))==1) then v236[4]=v45[v236[19 -15]];end v40[v115]=v236;break;end end break;end end end break;end end break;end end break;end end end v39=3;break;end end break;end end end if (v39~=3) then else local v108=0 -0;local v109;local v110;while true do if ((1 + 0)==v108) then while true do if (v109~=(0 + 0)) then else v110=0;while true do if (v110~=1) then else return v43;end if (0==v110) then local v121=0 + 0;while true do if (v121==0) then local v127=0;while true do if (v127~=(420 -(280 + 139))) then else v121=1;break;end if (v127==0) then for v224=1 + 0,v23() do v41[v224-1]=v28();end for v226=1,v23() do v42[v226]=v23();end v127=1;end end end if (v121==1) then v110=637 -(485 + 151);break;end end end end break;end end break;end if (0==v108) then v109=0;v110=nil;v108=1;end end end v97=1;end end end if (v79==(1 + 0)) then if (v39~=1) then else local v102=1033 -(857 + 176);local v103;while true do if (v102==(0 -0)) then v103=721 -(576 + 145);while true do if (v103~=1) then else v45={};v39=7 -5;break;end if (0==v103) then local v112=753 -(211 + 542);while true do if (v112~=1) then else v103=1;break;end if (v112==0) then v43={v40,v41,nil,v42};v44=v23();v112=1;end end end end break;end end end if (v39==0) then local v104=1141 -(700 + 441);local v105;while true do if (v104==(0 + 0)) then v105=0;while true do if (v105==0) then local v113=0;while true do if (v113==(3 -2)) then v105=1;break;end if (v113==(0 -0)) then v40={};v41={};v113=398 -(342 + 55);end end end if (v105~=(1 + 0)) then else v42={};v39=1;break;end end break;end end end break;end end end break;end if (v38~=2) then else v43=nil;v44=nil;v38=1 + 2;end if (v38==(98 -(87 + 10))) then local v77=0 + 0;local v78;while true do if (v77~=0) then else v78=0 + 0;while true do if (v78==(0 + 0)) then v41=nil;v42=nil;v78=1;end if (v78==(1 + 0)) then v38=2;break;end end break;end end end end end v29=nil;v17=7;end if (v17==7) then function v29(v30,v31,v32)local v46=v30[1];local v47=v30[2];local v48=v30[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v11("#",...) -1;local function v68()local v80=v46;local v81=Const;local v82=v47;local v83=v48;local v84=v27;local v85={};local v86={};local v87={};for v93=0,v67 do if ((4199>(367 + 176)) and (v93>=v83)) then v85[v93-v83]=v66[v93 + (1 -0)];else v87[v93]=v66[v93 + (1585 -(412 + 763 + 409))];end end local v88=(v67-v83) + 1 + 0;local v89;local v90;while true do local v94=0;local v95;local v96;while true do if ((1538<(4134 -(1029 + 846))) and (v94==0)) then v95=0 -0;v96=nil;v94=1 + 0;end if ((4447>=3369) and (v94==(3 -2))) then while true do if ((v95==((1973 -1569) -(382 + 22))) or ((1817 -1251)==(6005 -3913))) then v96=0 -0;while true do if ((0==v96) or ((3732 -1470)>=(3582 -(11 + 277)))) then local v111=0 + 0;while true do if ((v111==1) or (3275<=((9075 -5513) -(894 + 671)))) then v96=1 -0;break;end if (((6115 -2739)>(8 + 58)) and (v111==(0 + 0))) then v89=v80[v64];v90=v89[1];v111=1 + (0 -0);end end end if ((v96==(957 -(924 + 32))) or ((14 + 130)>(10645 -5817))) then if ((v90<=((4 -2) + 20)) or (((39 + 5812) -(701 + 364))<(4340 -3000))) then if ((v90<=10) or (1534>(16503 -(29051 -16256)))) then if ((v90<=(3 + (3 -2))) or (4496==1894)) then if (((4985 -(156 + 84))>=2116) and (v90<=((1507 -(1476 + 30)) + 0))) then if ((v90==(0 -0)) or ((1881 -1098)>=(2055 + 1039))) then if ((v89[1 + 1]==v87[v89[1980 -(1089 + 887)]]) or ((1924 + 214 + 384)>=(12251 -9629))) then v64=v64 + (48 -(28 + 19));else v64=v89[1655 -((5534 -4004) + 122)];end elseif ((v87[v89[1 + 1]]<v89[4]) or ((6934 -2116)>=(17495 -12508))) then v64=v64 + (1192 -(42 + 194 + 955));else v64=v89[1 + 2 + 0];end elseif ((v90<=(3 -1)) or (4774<=3986)) then local v128=0 + 0;local v129;local v130;local v131;local v132;local v133;while true do if (((0 -0)==v128) or ((5316 -(253 + 476))<(437 + 1206 + 1943))) then v129=(258 -(159 + 99)) -0;v130=nil;v128=1 -0;end if ((v128==(2 + 0)) or ((440 + 2003)>=(6241 -(316 + 1182)))) then v133=nil;while true do if (((2717 -(42 + 491))<(6570 -(253 + 1729))) and (v129==(1740 -(1687 + 52)))) then local v237=0;while true do if (((3594 -1505)>=1487) and (v237==(1 -0))) then v129=1398 -(307 + 1089);break;end if (((896 -529)<=(3041 -(238 + 1037))) and (v237==(0 + 0 + 0))) then v65=(v132 + v130) -(3 -2);v133=0 -0;v237=1 + 0;end end end if (((790 -(313 + 475))==v129) or ((2283 -(12 + 71))>(4212 -(601 + 872)))) then for v258=v130,v65 do local v259=0;local v260;local v261;while true do if (((2801 -(20 + 32 + 1304))>((9916 -5897) -2920)) and ((1 + 0)==v259)) then while true do if (((3170 + 605)>=(921 + 432)) and (v260==0)) then v261=0;while true do if (((0 + 0)==v261) or (((8213 + 2275) -6705)<=(1633 -792))) then v133=v133 + 1 + 0;v87[v258]=v131[v133];break;end end break;end end break;end if ((v259==0) or ((5789 -4038)==(309 + 462))) then v260=0 + 0 + 0;v261=nil;v259=1;end end end break;end if (((4301 -(130 + 206))==(11843 -7878)) and (v129==(0 + 0))) then local v238=0;while true do if ((v238==(0 -0)) or (3263<=(1128 + 559))) then v130=v89[8 -6];v131,v132=v84(v87[v130](v87[v130 + (615 -(611 + 3))]));v238=1 + 0;end if (((736 + 2339)==3075) and (1==v238)) then v129=307 -(235 + 71);break;end end end end break;end if ((v128==(1 + 0)) or ((4172 -1279)>(4110 + 808))) then v131=nil;v132=nil;v128=1786 -(252 + (3296 -1764));end end elseif (((5739 -(1095 + 337))>(3253 -(19 + 324))) and (v90>(1 + 2))) then local v151=0 + (0 -0);local v152;local v153;local v154;while true do if (((8821 -4374)>=(3588 -(286 + 232))) and ((1287 -(161 + 1126))==v151)) then local v228=779 -(316 + 463);while true do if (((6260 -(5135 -(262 + 210)))>=(2710 -(997 + 809))) and (v228==0)) then v152=v82[v89[6 -3]];v153=nil;v228=1248 -(14 + 1233);end if (((1254 -(708 + 332))==(829 -615)) and (v228==(317 -(22 + 294)))) then v151=776 -(244 + 531);break;end end end if ((1567==(777 + 790)) and (v151==((48 -(44 + 3)) + 0))) then v154={};v153=v9({},{__index=function(v239,v240)local v262=515 -(68 + 319 + 128);local v263;local v264;while true do if ((1286<(2236 + 1721)) and (v262==(942 -(44 + 897)))) then while true do if (((214 + 561)<=(4550 -(299 + 310))) and (v263==0)) then local v311=347 -(4 + 343);local v312;while true do if (((5323 -(78 + 1742))>=(3729 -((962 -(651 + 244)) + 617))) and (v311==((3400 -(538 + 956)) -((3492 -(906 + 1051)) + 371)))) then v312=0 + 0;while true do if (((73 + 1186 + 31)==(2466 -(563 + 613))) and (v312==(0 + 0))) then local v332=0 -0;while true do if ((((3282 -1270) + (2396 -(1172 + 822)))<=(6107 -(1382 + 14))) and (v332==0)) then v264=v154[v240];return v264[3 -2][v264[2]];end end end end break;end end end end break;end if (((1380 + 479)>(260 + 158)) and (v262==(0 -0))) then local v286=1571 -(559 + 1012);while true do if ((v286==(0 -0)) or (1948==(3325 -(1099 + (700 -415))))) then v263=0 + 0;v264=nil;v286=1 -0;end if (((164 -39)==(27 + 44 + 54)) and ((2 -(1391 -(691 + 699)))==v286)) then v262=1 + 0;break;end end end end end,__newindex=function(v241,v242,v243)local v265=87 -(69 + 18);local v266;local v267;local v268;while true do if ((v265==(1 + 0)) or ((3388 -(899 + 916))>(315 + 3874))) then v268=nil;while true do if ((v266==(1195 -(953 + 241))) or (490>(3972 -(185 + 3)))) then while true do if (((6324 -(295 + 1327))>(5025 -3200)) and (v267==(369 -((891 -(104 + 527)) + 109)))) then v268=v154[v242];v268[1 + 0][v268[1 + 1]]=v243;break;end end break;end if (((1165 + 43)<=4222) and (v266==(0 + 0))) then local v313=0 -0;while true do if ((v313==(878 -((1516 -(731 + 158)) + 250))) or ((8928 -4274)<1434)) then v266=1439 -(1018 + 420);break;end if ((v313==(0 + 0)) or ((2322 -1364)==(2229 -(97 + 293)))) then v267=0 -0;v268=nil;v313=1486 -(803 + 682);end end end end break;end if ((v265==(500 -(330 + 170))) or ((352 + 1346)<(27 + 343))) then v266=(527 -(306 + 221)) -0;v267=nil;v265=1;end end end});v151=(2 -0) + 0;end if ((2==v151) or ((586 -((1155 -(147 + 820)) + 192))>(3937 -(6 + 96)))) then for v244=284 -(266 + 17),v89[7 -3] do local v245=0 + 0;local v246;while true do if (((94 -(11 + 75))==(1826 -(416 + 1402))) and (v245==1)) then if (((11584 -(2825 + 4842))>=3052) and (v246[(871 -(721 + 149)) -(0 + 0)]==(24 + 2))) then v154[v244-1]={v87,v246[7 -4]};else v154[v244-(1 -0)]={v31,v246[(1 + 5) -3]};end v86[ #v86 + 1 + 0 + 0]=v154;break;end if ((v245==0) or ((937 -(202 + 551))>=(5857 -(9016 -4373)))) then local v277=1426 -(1330 + 96);while true do if ((v277==(3 -2)) or (((3421 -(1291 + 70)) -832)<(2313 -(361 + 661 + 83)))) then v245=1 + 0;break;end if ((v277==(157 -(15 + 142))) or ((2456 -(249 + 127))<=1197)) then v64=v64 + 1 + 0;v246=v80[v64];v277=1;end end end end end v87[v89[1 + 1]]=v29(v152,v153,v32);break;end end else local v155=0;local v156;local v157;local v158;while true do if (((8392 -4947)==3445) and (v155==(0 + 0))) then v156=0;v157=nil;v155=1 + (0 -0);end if ((v155==1) or (4855==(16900 -11903))) then v158=nil;while true do if ((((742 -326) + 758)>=(1194 -(637 -302))) and (v156==(1 + 0))) then while true do if (((0 + 0)==v157) or ((4070 -2558)>=2783)) then v158=v89[2 -0];do return v87[v158](v12(v87,v158 + 1 + 0,v89[8 -5]));end break;end end break;end if (((9077 -6304)<(185 + 4180)) and (v156==(0 + 0))) then v157=(0 -0) -0;v158=nil;v156=1;end end break;end end end elseif ((v90<=(20 -13)) or (1497==(1269 -329))) then if ((v90<=(704 -(262 + 437))) or ((1998 + 177)>(12666 -(5792 + 3327)))) then v87[v89[4 -(179 -(68 + 109))]][v89[3]]=v89[4];elseif ((v90==(1665 -(429 + 1230))) or ((1612 -(847 + 66))>=(9503 -5617))) then local v159=0 + 0;local v160;local v161;while true do if ((v159==0) or ((2846 -(36 + 535))==(3930 -(957 + 89)))) then v160=(0 -0) -0;v161=nil;v159=(1914 -1112) -(487 + 314);end if ((v159==(1018 -(566 + (1245 -794)))) or (((23011 -14881) -4400)<=(1660 + 251 + 142))) then while true do if (((2689 -(1229 + 116))>(557 -(70 + 142))) and (v160==(1027 -(693 + 334)))) then v161=v89[2];v87[v161](v12(v87,v161 + (2 -1),v65));break;end end break;end end else v87[v89[1 + 1 + 0]]=v32[v89[1 + 2]];end elseif ((v90<=8) or (281>=(6408 -((1194 -(342 + 62)) + 732)))) then v87[v89[3 -1]]();elseif (((4034 -(1008 + 26))<=(4399 -996)) and (v90==(31 -22))) then local v163=0 -0;local v164;local v165;local v166;local v167;while true do if (((7 -5)==v163) or (254>(6058 -2531))) then while true do if ((v164==(1 -0)) or ((6026 -(855 + 193))<(2832 -(402 + (1516 -804))))) then v167=nil;while true do if ((v165==(1094 -(854 + 240))) or ((2313 -((2090 -(451 + 1447)) + 41))==(13395 -(43084 -33845)))) then local v291=0 + 0;local v292;while true do if ((v291==(1626 -((2253 -(617 + 401)) + 391))) or (((5742 -(967 + 190)) -(73 + (631 -396)))==(3829 -888))) then v292=0;while true do if ((v292==0) or (1897<=(3497 -2223))) then v166=v89[2 + 0];v167=v87[v89[13 -10]];v292=1;end if ((4040>(341 + 270)) and (v292==1)) then v165=723 -(308 + 414);break;end end break;end end end if (((1806 + 758)>320) and ((1 -0)==v165)) then v87[v166 + (1 -0) + 0]=v167;v87[v166]=v167[v89[18 -14]];break;end end break;end if ((v164==(0 -0)) or ((4494 -(755 + 719))>=(5508 -(568 + 413)))) then v165=0;v166=nil;v164=1503 -(597 + (1787 -882));end end break;end if ((v163==(1 + 0)) or (459>((15607 -11387) -(56 + 13)))) then v166=nil;v167=nil;v163=1432 -(507 + 923);end if ((((6909 -(633 + 394)) -(837 + 486))>3811) and (v163==(955 -(385 + 570)))) then v164=0;v165=nil;v163=1121 -(926 + 194);end end else v87[v89[1 + 1]]=v87[v89[3]] * v89[(119 + 1855) -(1275 + 695)];end elseif (((3190 -(473 + 162 + 475))==(3600 -(1331 + 189))) and (v90<=16)) then if (((4851 -(539 + 397 + 440))==((6591 -(664 + 965)) -1487)) and (v90<=13)) then if ((886<=3329) and (v90<=(16 -(5 + 0)))) then local v135=(0 + 0) -0;local v136;local v137;local v138;while true do if ((v135==1) or ((1301 -(72 + 87))>=(150 + 128 + 1141))) then v138=nil;while true do if (((3562 -(706 + 901))>1366) and (v136==0)) then local v247=241 -(110 + 131);while true do if ((v247==((339 + 173) -(186 + 325))) or ((4899 -3196)==248)) then v136=(1475 -(607 + 867)) + 0;break;end if ((4835>(3113 -(827 + 284))) and (v247==(0 -0))) then v137=0 -0;v138=nil;v247=1;end end end if ((v136==(2 -1)) or (765<=(1206 -698))) then while true do if ((3214>=(47 + 340)) and (v137==(0 + 0))) then v138=v89[2 + 0];v87[v138]=v87[v138](v12(v87,v138 + 1 + 0,v89[10 -7]));break;end end break;end end break;end if ((3255==(9225 -5970)) and (v135==(0 -0))) then v136=29 -(8 + 21);v137=nil;v135=1;end end elseif ((v90>(2 + 10)) or ((7183 -4945)==(8917 -(3098 + 1687)))) then local v169=0 + 0;local v170;local v171;local v172;local v173;local v174;local v175;while true do if ((2==v169) or (61>(2913 -(37 + 704)))) then v174=nil;v175=nil;v169=7 -(1329 -(1313 + 12));end if ((v169==(0 + 0)) or ((1163 + 414)==(2526 -(1108 + 154)))) then v170=0 + (0 -0);v171=nil;v169=1;end if (((6456 -(930 + 597))==(3722 + 1207)) and (v169==(2 + 1))) then while true do if ((v170==2) or (1055>(3102 -(832 + 195)))) then for v279=(689 -531) -(59 + 98),v172 do v87[v173 + v279]=v174[v279];end v175=v174[1 + 0];v170=947 -(636 + 33 + 275);end if ((v170==(0 -(1542 -(750 + 792)))) or ((6303 -(1466 + 35))<(2547 -(1075 + 598)))) then local v269=0 + 0;while true do if ((v269==(0 + 0)) or ((203 + 199)>=(1651 + 1561))) then v171=v89[7 -5];v172=v89[954 -(17 + 191 + 742)];v269=1;end if ((v269==(1273 -(667 + 605))) or ((237 + 2591)>(1809 + 2786))) then v170=1;break;end end end if ((v170==3) or ((1310 + 37)==(3294 -(615 + 115)))) then if (((536 + 2085)==2621) and v175) then local v287=0 + 0;local v288;while true do if (((6022 -3084)<=(6083 -1311)) and (v287==(0 -0))) then v288=0;while true do if ((v288==(0 -0)) or ((21633 -(11245 + 5731))==(4141 -2390))) then v87[v173]=v175;v64=v89[5 -2];break;end end break;end end else v64=v64 + (1 -0);end break;end if ((v170==(1 -0)) or ((14089 -9681)<=(8264 -5347))) then local v270=0;while true do if ((v270==(1295 -(594 + (985 -285)))) or ((3561 -(238 + 1389))<(523 + 431))) then v170=2 + 0;break;end if (((5700 -3534)<4448) and (v270==(0 -0))) then v173=v171 + 1 + 1;v174={v87[v171](v87[v171 + 1],v87[v173])};v270=1 + 0;end end end end break;end if (((2804 -((1901 -(190 + 1412)) + 7))>((6270 -3612) -(51 + 191))) and (v169==(2 -1))) then v172=nil;v173=nil;v169=2;end end else local v176=(0 -0) -0;local v177;local v178;while true do if ((v176==(0 -0)) or ((24 + 716)>1548)) then v177=(251 -(83 + 168)) + 0;v178=nil;v176=316 -(184 + 131);end if ((v176==(1248 -(494 + 753))) or (3970==(5454 -(156 + 484)))) then while true do if ((v177==(0 -0)) or ((8773 -5905)<1515)) then v178=v89[2 + 0];do return v12(v87,v178,v178 + v89[1855 -(1737 + 115)]);end break;end end break;end end end elseif ((v90<=(42 -28)) or ((160 + 318)==(9168 -5529))) then v87[v89[1352 -(1260 + 90)]][v87[v89[(940 + 167) -(618 + 486)]]]=v89[11 -7];elseif ((1959>=(349 + 905)) and (v90==(9 + 6))) then local v179=1645 -(641 + 1004);local v180;local v181;local v182;while true do if (((1775 + 548)<(6107 -(1300 + 608))) and (v179==((1043 -(942 + 100)) -0))) then v182=nil;while true do if ((0==v180) or ((4188 + 680)<(1142 + 3216))) then v181=(1945 -(956 + 989)) + 0;v182=nil;v180=269 -(52 + 216);end if ((v180==(1 -0)) or ((1633 + 3292)==(2714 -1693))) then while true do if ((v181==(0 -0)) or (3634<599)) then v182=v89[1744 -(533 + 1209)];v87[v182](v87[v182 + 1 + 0]);break;end end break;end end break;end if ((v179==0) or ((3926 -(994 + 559))>4660)) then v180=0 -0;v181=nil;v179=40 -(31 + 8);end end else local v183=0 + 0;local v184;local v185;local v186;while true do if (((237 -(138 + 98))==v183) or ((3910 -1860)<1032)) then v186=v89[8 -5];for v248=1 + 0,v186 do v185[v248]=v87[v184 + v248];end break;end if ((v183==(1631 -(648 + 983))) or ((5365 -(148 + 147 + 178))<=(3096 -(868 + 436)))) then v184=v89[3 -1];v185=v87[v184];v183=481 -(240 + (1200 -(326 + 634)));end end end elseif ((v90<=(15 + 4)) or (1160==(2729 -938))) then if (((382 + 3365)>(2190 -((2188 -(985 + 248)) + 877))) and (v90<=(1084 -(405 + 662)))) then v87[v89[2 -0]]=v87[v89[1 + 2]][v89[4]];elseif (((1947 + 1510)>=(23 + 107)) and (v90>(1335 -(1068 + 249)))) then local v187=0;local v188;local v189;local v190;local v191;while true do if ((v187==1) or ((7803 -5061)>=3535)) then v190=nil;v191=nil;v187=2;end if (((314 -83)<=((6559 -4459) + 2336)) and (v187==2)) then while true do if ((v188==1) or ((3517 -(62 + 103))==(722 -(2146 -(1384 + 221))))) then v191=nil;while true do if (((3828 -(263 + 102))>229) and (v189==(1 + 0))) then for v308=v190 + (1437 -(530 + 906)),v89[245 -(143 + 98)] do v191=v191   .. v87[v308];end v87[v89[1 + 1]]=v191;break;end if ((v189==0) or ((31 + 424)==(4758 -(332 + 355)))) then local v296=0;local v297;while true do if (((17688 -13078)>(2042 -(63 + 212))) and ((0 + 0)==v296)) then v297=1411 -((1822 -(180 + 243)) + 12);while true do if ((v297==0) or ((161 + 566 + 53)>4934)) then local v326=0;while true do if (((1910 -(559 + 1350))==v326) or ((2212 -((1613 -(102 + 152)) + 167))>=((1460 + 2928) -(508 + 346)))) then v297=1 + 0;break;end if ((((830 -524) + 3001)<=(1537 + 3241)) and (v326==(917 -(533 + 384)))) then v190=v89[8 -5];v191=v87[v190];v326=422 -(184 + 237);end end end if ((v297==(1 -(0 -0))) or ((4544 -3054)<=(1953 -(1746 + 9)))) then v189=1 + 0;break;end end break;end end end end break;end if ((0==v188) or ((1918 + (415 -246))<=(2365 -(71 + 1074)))) then local v271=0;while true do if (((177 + 1494)<=2494) and (v271==0)) then v189=623 -(164 + 459);v190=nil;v271=1205 -(552 + 652);end if ((4951>=(6420 -3603)) and ((1686 -(85 + 1600))==v271)) then v188=1 -0;break;end end end end break;end if (((2163 -(610 + 337))>(3016 -1958)) and (((0 + 0) -0)==v187)) then v188=0 -(1733 -(200 + 1533));v189=nil;v187=1698 -(1032 + 665);end end else v87[v89[1 + 1]][v87[v89[2 + 1]]]=v87[v89[4]];end elseif ((v90<=20) or (2201<(4713 -3405))) then v87[v89[427 -(185 + 240)]]=v89[1368 -((1163 -(459 + 352)) + 438 + 575)]~=(0 -0);elseif ((v90==(6 + 15)) or (((18800 -11398) -5131)>=(4325 -1508))) then local v193=0;local v194;local v195;while true do if (((2188 + 221)<((40386 -21453) -14069)) and (1==v193)) then for v250=1 + 0, #v86 do local v251=0 + 0;local v252;local v253;while true do if ((v251==(1517 -((1138 -539) + 918))) or ((693 + 927)>(5491 -3079))) then local v281=0;while true do if ((v281==1) or ((3649 -((1891 -(364 + 919)) + 1129))>=(538 + 4307))) then v251=1 + 0;break;end if (((1262 -(417 + 845))==v281) or ((1496 -(606 + 784))>3906)) then v252=0 + 0 + 0;v253=nil;v281=1 + 0;end end end if (((6802 -(199 + 1612))>4658) and (v251==(1 + (1449 -(669 + 780))))) then while true do if (((2430 -1559)<=(2442 + 1110)) and (v252==(0 -0))) then v253=v86[v250];for v314=0 -0, #v253 do local v315=0 + 0;local v316;local v317;local v318;local v319;while true do if ((v315==(0 + 0)) or ((80 + 104)>(1268 -(247 + (1718 -965))))) then v316=0 -0;v317=nil;v315=254 -(182 + 71);end if (((2668 -(1607 + 153))==(1538 -630)) and (v315==(627 -(122 + 504)))) then local v325=664 -(445 + 219);while true do if ((v325==(0 -(0 + 0))) or ((414 + 116)>2854)) then v318=nil;v319=nil;v325=839 -(60 + 476 + 302);end if ((((2697 -(1013 + 351)) -(68 + 278))<(2718 + 1171)) and (v325==(4 -(8 -5)))) then v315=376 -(138 + 236);break;end end end if ((78<(3512 -((1543 -(45 + 686)) + 833))) and (v315==(4 -2))) then while true do if ((v316==1) or ((1233 + 235)==(586 + 842))) then v319=v317[961 -(441 + 518)];if (((v318==v87) and (v319>=v194)) or ((9073 -4206)<(10729 -(30359 -22313)))) then local v335=0;local v336;local v337;while true do if ((v335==(72 -(50 + 22))) or ((896 + 807)<=(2511 -(811 + 1183)))) then v336=0;v337=nil;v335=(213 -(206 + 6)) + 0;end if (((1 + 0)==v335) or ((1659 -(39 + 371))==(1420 -751))) then while true do if (((5892 -(974 + 883))<=(5507 -(662 + 565))) and (0==v336)) then v337=0 -0;while true do if ((v337==(1352 -(301 + 1051))) or (919<243)) then v195[v319]=v318[v319];v317[1]=v195;break;end end break;end end break;end end end break;end if ((v316==(0 + 0 + 0 + 0)) or ((4615 -919)<=(7215 -5654))) then local v333=0 + 0;local v334;while true do if ((1287==(2800 -(174 + 1339))) and (v333==(1122 -(35 + 1087)))) then v334=0 -0;while true do if ((v334==(0 + 0)) or ((5344 -(65 + 1289))>=(3102 + 1502))) then local v342=0 -0;while true do if (((93 -(64 + 29))==v342) or ((151 + 364)>(12937 -8843))) then v317=v253[v314];v318=v317[1 + 0];v342=1 + 0;end if ((v342==1) or ((5358 -(845 + 403 + 245 + 182))<=(1743 -(228 + 78)))) then v334=1;break;end end end if ((v334==(3 -2)) or ((833 + 2322)>=(3743 -(215 + 304)))) then v316=(571 -(95 + 475)) + 0;break;end end break;end end end end break;end end end break;end end break;end end end break;end if ((4551>=(1310 + 585)) and (v193==0)) then local v230=0 + 0;while true do if ((v230==0) or ((13441 -9677)<=1359)) then v194=v89[2];v195={};v230=142 -(71 + 70);end if (((3813 + 818)>(2715 + 94)) and (v230==(3 -2))) then v193=1 + 0;break;end end end end else local v196=0;local v197;local v198;local v199;while true do if ((976<=(3629 -(257 + 44))) and (v196==(0 -0))) then local v231=0 -0;while true do if ((v231==(607 -(80 + 527))) or (((6562 -4830) -(94 + 52 + 410 + 16))<=(435 -289))) then v197=v89[1549 -(1479 + 68)];v198={v87[v197](v12(v87,v197 + 1 + 0,v65))};v231=2 -1;end if ((1865<=(5552 -(700 + 401))) and (v231==(1 + 0))) then v196=2 -1;break;end end end if (((9168 -4203)>(766 + 1177)) and (v196==(1 + 0))) then v199=0 -0;for v254=v197,v89[(109 + 197) -(12 + 290)] do local v255=0;local v256;while true do if ((v255==(152 -(5 + 147))) or ((13129 -9658)==1601)) then v256=0 -0;while true do if (((2283 + 848)>=(1878 + 53)) and (v256==0)) then v199=v199 + 1 + 0;v87[v254]=v198[v199];break;end end break;end end end break;end end end elseif (((2267 -1290)<=(9784 -7313)) and (v90<=(168 -(8 + 126)))) then if ((v90<=((1849 -(1670 + 80)) -71)) or ((2257 -(874 + 138))>(2088 + 1840))) then if ((v90<=25) or ((15794 -11952)==(5251 -2357))) then if (((4242 + 449)>=((1066 -422) -481)) and (v90<=23)) then if (((512 + 920)<4491) and (v87[v89[1 + 1]]~=v89[4])) then v64=v64 + ((1826 -(1130 + 692)) -3);else v64=v89[3];end elseif (((996 -((2088 -(133 + 1343)) + 62))>=(125 + 15 + 28)) and (v90==(9 + 15))) then v87[v89[2]]= #v87[v89[3]];else v87[v89[2]]=v31[v89[3]];end elseif ((v90<=26) or ((2624 -1326)>=(15673 -11139))) then v87[v89[2 + 0]]=v87[v89[3]];elseif ((((6969 -5159) -(1040 + 11))==(1827 -(250 + 818))) and (v90==(5 + 13 + 9))) then v32[v89[3]]=v87[v89[2 + (0 -0)]];elseif (((888 + 200)<=(2173 -(74 + 996))) and  not v87[v89[791 -(649 + 140)]]) then v64=v64 + (1030 -(1013 + 16));else v64=v89[1 + 2];end elseif (((4166 -(312 + 600))<=(890 + 615 + 2621)) and (v90<=(11 + 20))) then if (((6034 -(1398 + 389))>((1682 -(139 + 32)) + 1060)) and (v90<=(67 -38))) then if (((1959 -(48 + (461 -(57 + 5))))<4290) and v87[v89[7 -5]]) then v64=v64 + (3 -2);else v64=v89[3];end elseif ((v90==(1195 -(292 + 873))) or (4017<(142 + 3117))) then v87[v89[(4 -3) + 1]]=v87[v89[9 -6]] + v89[(418 -(89 + 326)) + 1];else v87[v89[(1 -0) + (1358 -(1254 + 103))]]=v29(v82[v89[6 -3]],nil,v32);end elseif (((2260 -970)<=(4962 -(552 + 92 + 0))) and (v90<=(1369 -(554 + 783)))) then v64=v89[476 -(94 + 52 + 327)];elseif ((v90>(1164 -(728 + 403))) or ((2550 -(41 + 1 + 1))<=((4328 -739) -(1123 + 1320)))) then v87[v89[2]]=v87[v89[3]][v87[v89[4]]];elseif (((94 + 62)<(145 + 557)) and (v87[v89[1895 -(1564 + 329)]]==v89[3 + 1])) then v64=v64 + ((931 + 376) -(346 + 960));else v64=v89[2 + (95 -(24 + 70))];end elseif ((v90<=(426 -(96 + 290))) or ((5771 -(1408 + 15 + 332))<(5974 -3221))) then if ((v90<=(99 -(33 + 29))) or ((884 + 1114)==(3485 + 94))) then if ((v90<=(15 + 20)) or ((8355 -4635)<=(5410 -2272))) then do return v87[v89[2 -0]];end elseif ((v90==(73 -37)) or (3837<=148)) then if (((2084 + 1985)==4069) and (v87[v89[2 + 0]]<v87[v89[1934 -(571 + 1359)]])) then v64=v64 + (1783 -(1710 + 72));else v64=v89[6 -3];end else do return;end end elseif ((98<1080) and (v90<=(19 + 19))) then v87[v89[1 + 1]]=v89[4 -1];elseif ((v90==(1976 -(1651 + 286))) or ((181 + 685)==(646 -(389 + 184)))) then if (((5201 -(10 + 1432))>(9175 -(12977 -6638))) and (v87[v89[5 -3]]==v87[v89[4]])) then v64=v64 + ((694 + 690) -(1181 + 202));else v64=v89[3];end else for v220=v89[3 -1],v89[1 + 2] do v87[v220]=nil;end end elseif ((v90<=(6 + 37)) or ((2259 -(1174 + 392))>(1358 + 3044))) then if ((3385<(5601 -1412)) and (v90<=(726 -(209 + 333 + 143)))) then local v144=0 + 0;local v145;local v146;local v147;while true do if ((v144==(442 -(394 + (138 -91)))) or ((3871 -1360)>(5110 -(1020 + 730)))) then v147=nil;while true do if ((((1630 -1301) + 137)<=(907 + (717 -(17 + 665)))) and (v145==(1 + 0))) then while true do if ((v146==(0 + 0)) or ((13227 -(10652 -(485 + 1184)))<=1300)) then v147=v89[(407 -(147 + 258)) -0];v87[v147]=v87[v147](v87[v147 + 1 + 0]);break;end end break;end if (((3619 -(32 + 1265))>935) and (v145==(0 -0))) then v146=1634 -(619 + 1015);v147=nil;v145=2 -1;end end break;end if ((2056>=((564 + 541) -(30 + (513 -(134 + 111))))) and (v144==(0 + 0))) then v145=0;v146=nil;v144=1;end end elseif (((311 + 3117)>=1986) and (v90>(5 + 37))) then local v206=0;local v207;local v208;local v209;local v210;while true do if ((v206==(388 -(343 + 44))) or (((2705 -(26 + 312)) -1371)>1409)) then v209=nil;v210=nil;v206=1 + 1;end if (((2 + 0)==v206) or ((3171 -2325)>=(201 + 731))) then while true do if (((10324 -6381)>=(4098 -(747 + 283))) and (v207==((140 + 677) -(606 + 100 + 110)))) then v210=(0 -0) + 0;for v283=v208,v89[4] do local v284=0;local v285;while true do if ((v284==0) or ((21816 -16901)<=((681 + 1837) -(1784 + 155)))) then v285=0 + 0;while true do if (((2184 -1112)>=(8 + 49)) and (v285==(1297 -((297 -204) + 1204)))) then v210=v210 + (43 -(16 + 26));v87[v283]=v209[v210];break;end end break;end end end break;end if ((v207==(0 -0)) or ((1235 -(846 + 169))==(8621 -5905))) then local v272=0;while true do if (((4177 -(653 + (2467 -1917)))>1349) and (v272==(1 + 0))) then v207=(1126 -(763 + 362)) -(0 -0);break;end if ((((946 + 828) -(1568 + 206))==v272) or ((422 + 2272)>=2766)) then v208=v89[2];v209={v87[v208](v87[v208 + 1])};v272=1 + 0;end end end end break;end if ((410<(13303 -9956)) and (v206==(0 + 0))) then v207=0 -0;v208=nil;v206=1 + 0;end end else local v211=0 + 0;local v212;local v213;local v214;local v215;while true do if (((3422 + 710)>=(5877 -(1206 + 679))) and (v211==(3 -1))) then while true do if ((v212==(1 + 0)) or ((3461 -(109 + 39))<(124 + 507 + 1742))) then v215=nil;while true do if ((v213==(464 -(415 + 49))) or ((8497 -6102)>=(946 + 1961))) then local v298=0;local v299;while true do if (((1790 -(523 + 469))==(1164 -366)) and (v298==(0 -0))) then v299=1687 -(1236 + (1269 -818));while true do if ((v299==(1 + 0)) or (78>(1071 -(212 + 617)))) then v213=1649 -(674 + 974);break;end if ((2779==2779) and (v299==(0 + 0))) then local v327=1461 -((2998 -1985) + 448);while true do if (((3629 -(361 + 140))<=(2124 + 2297)) and (v327==(1990 -((2873 -1224) + 216 + 124)))) then v299=1 -0;break;end if ((v327==(0 + 0)) or ((2801 -(628 + 672))>4964)) then v214=v89[2 + 0];v215=v87[v214];v327=1493 -(1280 + 212);end end end end break;end end end if ((v213==(268 -(71 + 196))) or ((5222 -3513)==1964)) then for v310=v214 + (1182 -(997 + 184)),v89[6 -3] do v7(v215,v87[v310]);end break;end end break;end if (((4499 -(1240 + 295))==(6108 -3144)) and (v212==(1133 -(138 + 150 + 845)))) then local v273=0;while true do if ((v273==1) or (2332>=(4375 -(12 + 1506)))) then v212=1 + 0;break;end if (((0 + 0)==v273) or ((3893 -((1730 -977) + 715))<=(4031 -2755))) then v213=0;v214=nil;v273=1;end end end end break;end if ((2154>(1543 -((256 -194) + 484))) and (v211==(0 -0))) then v212=0 + 0;v213=nil;v211=(816 -(768 + 47)) + 0;end if ((v211==(448 -(239 + 208))) or ((8303 -3581)<=((10704 -7670) -(482 + 380)))) then v214=nil;v215=nil;v211=2 -0;end end end elseif ((v90<=(4 + 40)) or ((2363 -(116 + 135))>(7965 -3781))) then v87[v89[5 -3]][v89[1 + 2]]=v87[v89[(6 + 5) -7]];elseif ((v90>(135 -90)) or (((7061 -4345) -((1213 -(990 + 185)) + 1286))>(4741 -(57 + 1 + 100)))) then local v216=439 -(437 + 2);local v217;local v218;while true do if ((v216==(0 -0)) or ((9840 -5309)<112)) then v217=0 -0;v218=nil;v216=812 -(70 + 741);end if ((v216==(2 -1)) or (((2166 + 2715) -(172 + 177))<=(4447 -(678 + 240)))) then while true do if ((v217==(0 + 0)) or ((2848 -(242 + 602))>(8358 -5214))) then v218=v89[1062 -(142 + 918)];do return v12(v87,v218,v65);end break;end end break;end end else v87[v89[2 -0]]={};end v64=v64 + (2 -1);break;end end break;end end break;end end end end A,B=v27(v10(v68));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v30[4][v64] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v33)if (v1(v33,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v33,1,1));return "";end end else local v70=0;local v71;while true do if (v70==0) then v71=v2(v0(v33,16));if v19 then local v100=0;local v101;while true do if (v100==1) then return v101;end if (v100==0) then v101=v5(v71,v19);v19=nil;v100=1;end end else return v71;end break;end end end end);v17=1;end if (v17==1) then v20=nil;function v20(v34,v35,v36)if v36 then local v72=(1574 -(616 + 958)) -0;local v73;while true do if (v72==(0 + 0)) then v73=(v34/(2^(v35-(1 + 0))))%((1 + 0 + 1)^(((v36-(1 -0)) -(v35-((8 -5) -2))) + (3 -2)));return v73-(v73%((2229 -745) -(148 + 1335)));end end else local v74=0 -0;local v75;while true do if (v74==(1483 -(1317 + 166))) then v75=((11 -5) -4)^(v35-((1580 -(919 + 658)) -(1320 -(1100 + 218))));return (((v34%(v75 + v75))>=v75) and (1799 -((2696 -(357 + 1164)) + 623))) or (0 -0);end end end end v21=nil;v17=2;end if (v17==3) then v23=nil;function v23()local v49,v50,v51,v52=v1(v15,v18,v18 + 2 + 1 + 0);v18=v18 + (13 -9);return (v52 * (5704633 + 11072583)) + (v51 * (25134 + 40402)) + (v50 * (870 -(75 + 539))) + v49;end v24=nil;v17=4;end if (v17==2) then function v21()local v53=0 -0;local v54;while true do if (v53==0) then v54=v1(v15,v18,v18);v18=v18 + (3 -2);v53=1;end if (v53==(1 + 0)) then return v54;end end end v22=nil;function v22()local v55,v56=v1(v15,v18,v18 + (1504 -(1372 + 130)));v18=v18 + 2;return (v56 * (489 -233)) + v55;end v17=3;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==4) then function v24()local v57=0 + 0;local v58;local v59;while true do if (v57==((1262 + 117) -(477 + 901))) then return (( -(2 + 0) * v20(v59,(1474 -(270 + 1136)) -(9 + 26 + 1))) + ((732 + 391) -(393 + 729))) * ((3 -1)^(v20(v59,1042 -(149 + 872),106 -75) -(1088 -(51 + 14 + 0)))) * ((((v20(v59,2 -1,20) * ((4 -2)^(130 -(31 + 67)))) + v58)/((1 + 1)^(802 -(510 + 240)))) + (539 -(119 + 419)));end if (v57==(680 -(262 + 103 + 315))) then v58=v23();v59=v23();v57=2 -1;end end end v25=nil;function v25(v37)local v60;if  not v37 then v37=v23();if (v37==(0 + 0)) then return "";end end v60=v3(v15,v18,(v18 + v37) -(281 -(50 + 230)));v18=v18 + v37;local v61={};for v62=1 + 0, #v60 do v61[v62]=v2(v1(v3(v60,v62,v62)));end return v6(v61);end v17=5;end end end vv8());end
